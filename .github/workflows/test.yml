# PR Based Deploy On OpenShift
# Builds and Deploys unmerged PR's to temporary pods/services/routes/etc in the OpenShift Dev environment.
name: Test Actions

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  cacheRepo:
    name: Checkout and cache target branch
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: ${{ github.event.number }}
    steps:
      # Install Node - for `node` and `npm` commands
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Checkout Target Branch
        uses: actions/checkout@v3

      # Cache Node modules
      - name: Cache repo
        uses: actions/cache@v3
        id: cache-repo
        env:
          cache-name: cache-repo
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ${{ github.workspace }}/*
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths_filter: |
            app1:
              paths_ignore:
                - 'app1/README.md'
              paths:
                - 'app1/**'
            app2:
              paths_ignore:
                - 'app2/README.md'
              paths:
                - 'app2/**'
          paths_ignore: '["**/README.md"]'

  buildApp1:
    name: Build App 1
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == false && github.event.pull_request.draft == false }}
    # if: ${{ github.event.pull_request.merged == false && github.event.pull_request.draft == false && (needs.pre_job.outputs.should_skip != 'true' || !fromJSON(needs.pre_job.outputs.paths_result).app1.should_skip) }}
    env:
      PR_NUMBER: ${{ github.event.number }}
    needs:
      - cacheRepo
      - pre_job
    steps:
      - run: echo "${{ needs.pre_job.outputs.should_skip }}"
      - run: echo "${{ fromJSON(needs.pre_job.outputs.paths_result).app1.should_skip }}"
      # Install Node - for `node` and `npm` commands
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      # Cache the repo
      - name: Cache repo
        uses: actions/cache@v3
        id: cache-repo
        env:
          cache-name: cache-repo
        with:
          path: ${{ github.workspace }}/*
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      # Checkout the branch
      - name: Checkout Target Branch
        if: steps.cache-repo.outputs.cache-hit != 'true'
        uses: actions/checkout@v3

      # Cache Node modules
      - name: Cache node modules
        if: steps.app-diff.outputs.any_changed == 'true'
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('*/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build App 1
        if: ${{ steps.app-diff.outputs.any_changed == 'true' }}
        working-directory: "app1"
        run: |
          npm install

  buildApp2:
    name: Build App 2
    runs-on: ubuntu-latest
    # if: ${{ github.event.pull_request.merged == false && github.event.pull_request.draft == false }}
    if: ${{ github.event.pull_request.merged == false && github.event.pull_request.draft == false && (needs.pre_job.outputs.should_skip != 'true' || !fromJSON(needs.pre_job.outputs.paths_result).app2.should_skip) }}
    env:
      PR_NUMBER: ${{ github.event.number }}
    needs:
      - cacheRepo
      - pre_job
    steps:
      - run: echo "${{ needs.pre_job.outputs.should_skip }}"
      - run: echo "${{ fromJSON(needs.pre_job.outputs.paths_result).app1.should_skip }}"
      # Install Node - for `node` and `npm` commands
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      # Cache the repo
      - name: Cache repo
        uses: actions/cache@v3
        id: cache-repo
        env:
          cache-name: cache-repo
        with:
          path: ${{ github.workspace }}/*
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      # Checkout the branch
      - name: Checkout Target Branch
        if: steps.cache-repo.outputs.cache-hit != 'true'
        uses: actions/checkout@v3

      # Cache Node modules
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('*/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build App 2
        working-directory: "app2"
        run: |
          npm install
